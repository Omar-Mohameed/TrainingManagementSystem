@model GradeIndexVM

<div class="container mt-4">
    <h2 class="mb-4">Grades List</h2>

    <form method="get" asp-action="Index" class="form-inline mb-3">
        <input type="text" name="searchTerm" class="form-control" placeholder="Search..."
               value="@Model.SearchTerm" />
        <button class="btn btn-primary" type="submit">Search</button>
        <a asp-action="Index" class="btn btn-secondary ml-2">Reset</a>

    </form>

    <div>
        <a class="btn btn-outline-primary" asp-controller="Grade" asp-action="Create">Add Grade</a>
    </div>

    <table class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th>Session</th>
                <th>Trainee</th>
                <th>Instructor</th>
                <th>Grade By</th>
                <th>Grade</th>
                <th>Comments</th>
                <th>Created At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Grades.Any())
            {
                <tr>
                    <td colspan="7" class="text-center text-muted">No grades found.</td>
                </tr>
            }
            else
            {
                @foreach (var grade in Model.Grades)
                {

                    var badgeClass = grade.Value switch
                    {
                        >= 90 => "bg-success text-white",     // A
                        >= 80 => "bg-primary text-white",     // B
                        >= 70 => "bg-warning text-dark",      // C
                        >= 60 => "bg-orange text-white",      // D
                        _ => "bg-danger text-white"           // F
                    };

                    <tr>
                        <td>@grade.SessionName</td>
                        <td>@grade.TraineeName</td>
                        <td>@grade.InstructorName</td>
                        <td>@grade.InstructorName</td>
                        <td>
                            <span class="badge @badgeClass fs-6 px-3 py-2">
                                @grade.Value
                            </span>
                        </td>
                        <td>@grade.Comments</td>
                        <td>@grade.CreateAt.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@grade.Id" class="btn btn-sm btn-outline-secondary"><i class="bi bi-pencil-square me-1"></i> Edit</a>
                            <a asp-action="Details" asp-route-id="@grade.Id" class="btn btn-outline-info btn-sm me-1">
                                <i class="bi bi-eye"></i> Details
                            </a>
                            <a class="btn btn-sm btn-outline-danger"
                               onclick=DeleteItem("/Grade/Delete/@grade.Id")>
                                <i class="bi bi-trash me-1"></i> Delete
                            </a>
                        </td>

                    </tr>
                }
            }
        </tbody>
    </table>

    <!-- Pagination Controls -->
    <nav>
        <ul class="pagination">
            @if (Model.TotalPages >= 1)
            {
                <!-- First Page -->
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-pageNumber="1"
                       asp-route-searchTerm="@Model.SearchTerm"
                       aria-label="First">
                        «
                    </a>
                </li>

                <!-- Previous Page -->
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-pageNumber="@(Model.CurrentPage - 1)"
                       asp-route-searchTerm="@Model.SearchTerm"
                       aria-label="Previous">
                        ‹
                    </a>
                </li>

                <!-- Page Numbers -->
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@i"
                           asp-route-searchTerm="@Model.SearchTerm">@i</a>
                    </li>
                }

                <!-- Next Page -->
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-pageNumber="@(Model.CurrentPage + 1)"
                       asp-route-searchTerm="@Model.SearchTerm"
                       aria-label="Next">
                        ›
                    </a>
                </li>

                <!-- Last Page -->
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-pageNumber="@Model.TotalPages"
                       asp-route-searchTerm="@Model.SearchTerm"
                       aria-label="Last">
                        »
                    </a>
                </li>

            }

        </ul>
    </nav>

@section Scripts{
        <script src="~/js/delete.js"></script>
}
